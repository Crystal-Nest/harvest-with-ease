package crystalspider.harvestwithease.handler;

import java.util.NoSuchElementException;

import crystalspider.harvestwithease.HarvestWithEaseLoader;
import crystalspider.harvestwithease.api.HarvestWithEaseAPI;
import crystalspider.harvestwithease.config.HarvestWithEaseConfig;
import net.fabricmc.fabric.api.event.player.PlayerBlockBreakEvents;
import net.minecraft.block.BlockState;
import net.minecraft.block.entity.BlockEntity;
import net.minecraft.entity.ExperienceOrbEntity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.server.world.ServerWorld;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;
import net.minecraft.world.GameRules;
import net.minecraft.world.World;

/**
 * {@link PlayerBlockBreakEvents#AFTER} event handler.
 * Handles the {@link PlayerBlockBreakEvents#AFTER} event to break-harvest and drop xp when possible.
 * See {@link #handle(World, PlayerEntity, BlockPos, BlockState, BlockEntity)} for more details.
 */
public final class PlayerBlockBreakHandler {
  /**
   * handles the {@link PlayerBlockBreakEvents#AFTER} event.
   * If configured to do so, drops xp when breaking a mature crop.
   * 
   * @param world
   * @param player
   * @param pos
   * @param state
   * @param blockEntity
   */
  public static void handle(World world, PlayerEntity player, BlockPos pos, BlockState state, BlockEntity blockEntity) {
    try {
      if (!world.isClient() && HarvestWithEaseConfig.getGrantedExp() > 0 && HarvestWithEaseAPI.isBreakableCrop(state.getBlock()) && HarvestWithEaseAPI.isMature(state) && world.getGameRules().getBoolean(GameRules.DO_TILE_DROPS)) {
        ExperienceOrbEntity.spawn((ServerWorld) world, Vec3d.ofCenter(pos), HarvestWithEaseConfig.getGrantedExp());
      }
    } catch (NullPointerException | NoSuchElementException | ClassCastException e) {
      HarvestWithEaseLoader.LOGGER.debug("Exception generated by block at [" + pos.getX() + ", " + pos.getY() + ", " + pos.getZ() + "]");
      HarvestWithEaseLoader.LOGGER.debug("This is a non blocking error, but can result in incorrect behavior for mod " + HarvestWithEaseLoader.MODID);
      HarvestWithEaseLoader.LOGGER.debug("Most probably the cause of this issue was that a non-crop ID was added in the configuration and its age property could not be retrieved, see stack trace for more details", e);
    }
  }
}
